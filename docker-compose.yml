services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: exoplanet_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: exoplanet_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - exoplanet_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: exoplanet_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - exoplanet_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: exoplanet_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=exoplanet_db
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - exoplanet_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker for Background Tasks
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: exoplanet_celery_worker
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=exoplanet_db
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - exoplanet_network
    command: celery -A app.tasks.celery worker --loglevel=info

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: exoplanet_celery_beat
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=exoplanet_db
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
    networks:
      - exoplanet_network
    command: celery -A app.tasks.celery beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: exoplanet_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - exoplanet_network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: exoplanet_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - exoplanet_network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  exoplanet_network:
    driver: bridge